// import Router from "next/router";
// import NProgress from "nprogress";

// const User_category = ({ open, close, click, setClick }) => {
//   const router = useRouter();
//   NProgress.configure({ showSpinner: false });
//   Router.events.on("routeChangeStart", () => NProgress.start());
//   Router.events.on("routeChangeComplete", () => NProgress.done());
//   Router.events.on("routeChangeError", () => NProgress.done());

//   const sendToMobile = (file) => {
//     window.ReactNativeWebView.postMessage(JSON.stringify(file));
//   };

//   useEffect(() => {
//     console.log(close);
//     console.log(open);
//     click ? sendToMobile("NO_BACK") : sendToMobile("BACK");
//   }, [click, close, open]);

//   const fromReactNative = (e) => {
//     try {
//       sendToMobile("BACK");
//       const data = JSON.parse(e.data);
//       if (data.method === "BACK") {
//         sendToMobile({ mode: "EXITAPP" });
//       } else {
//         close();
//       }
//     } catch (error) {
//       alert(error);
//     }
//   };

//   useEffect(() => {
//     document.addEventListener("message", fromReactNative);
//     return () => document.removeEventListener("message", fromReactNative);
//   }, []);

//   useEffect(() => {
//     window.addEventListener("message", fromReactNative);
//     return () => window.removeEventListener("message", fromReactNative);
//   }, []);

//   const Presence = useContext(PresenceType);

//   useEffect(() => {
//     console.log("PRESENCE TYPE : ", Presence.presence);
//   }, [Presence.presence]);
//   return (
//     <div className='w-full bg-custom-bg backdrop-filter backdrop-blur-2xl shadow-xl space-y-2 rounded-md py-2'>
//       <div className='grid grid-rows-2 grid-cols-4 gap-2'>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
//             onClick={() => {
//               Presence.setPresence("presensi");
//               router.push("home/camera");
//             }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Presensi</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
//             onClick={() => {
//               Presence.setPresence("mulai-lembur");
//               router.push("home/camera");
//             }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Mulai Lembur</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
// onClick={() => {
//   Presence.setPresence("istirahat");
//   router.push("home/camera");
// }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Istirahat</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
//             onClick={() => {
//               Presence.setPresence("izin-dan-cuti");
//               router.push("home/izin");
//             }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Izin & Cuti</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
//             onClick={() => {
//               Presence.setPresence("pulang");
//               router.push("home/camera");
//             }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Pulang</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
// onClick={() => {
//   Presence.setPresence("selesai-lembur");
//   router.push("home/camera");
// }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Selesai Lembur</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
// onClick={() => {
//   Presence.setPresence("kembali-kerja");
//   router.push("home/camera");
// }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Kembali Kerja</p>
//           </button>
//         </div>
//         <div className='flex justify-center items-center'>
//           <button
//             className='w-20 h-20 flex flex-col justify-center items-center'
//             onClick={(e) => {
//               router.push(
//                 router.pathname + "?=menuLainnya",
//                 router.pathname + "?=menuLainnya"
//               );
//               open(e);
//             }}
//           >
//             <div className='bg-custom-black h-10 w-10 rounded-full'></div>
//             <p className='text-1xs'>Lainnnya</p>
//           </button>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default User_category;

const items = [
  "TRIGGER",
  "TRIGGER",
  "TRIGGER",
  "TRIGGER",
  "TRIGGER",
  "TRIGGER",
];
const height = items.length * 60 + 80;
const [{ y }, api] = useSpring(() => ({ y: height }));
const open = ({ canceled }) => {
  setClick(true);
  api.start({
    y: 0,
    immediate: false,
    config: canceled ? config.wobbly : config.stiff,
  });
};

const close = (velocity = 0) => {
  setClick(false);
  api.start({
    y: height,
    immediate: false,
    config: { ...config.stiff, velocity },
  });
};

useEffect(() => {
  console.log(click);
}, [click]);

const bind = useDrag(
  ({
    last,
    velocity: [, vy],
    direction: [, dy],
    movement: [, my],
    cancel,
    canceled,
  }) => {
    if (my < -70) cancel();
    if (last) {
      my > height * 0.5 || (vy > 0.5 && dy > 0)
        ? close(vy)
        : open({ canceled });
    } else api.start({ y: my, immediate: true });
  },
  {
    from: () => [0, y.get()],
    filterTaps: true,
    bounds: { top: 0 },
    rubberband: true,
  }
);

const display = y.to((py) => (py < height ? "block" : "none"));

const [scrolling, setScrolling] = useState(false);
const NavbarAnimation = (event) => {
  if (window.scrollY > 70) {
    setScrolling(true);
  } else {
    setScrolling(false);
  }
};
useEffect(() => {
  window.addEventListener("scroll", NavbarAnimation);
}, []);

const [presentPic, setPresentPic] = useState(false);
const handleOpenPresent = () => setPresentPic(true);
const handleClosePresent = () => setPresentPic(false);
const PresentPicture = useSpring({
  y: presentPic ? 0 : 1000,
  scale: presentPic ? 1 : 0,
  config: {
    friction: 15,
    precision: 1,
  },
});
